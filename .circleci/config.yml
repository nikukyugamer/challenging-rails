# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: cimg/ruby:3.1
      # Error: Database is uninitialized and superuser password is not specified.
      #  You must specify POSTGRES_PASSWORD to a non-empty value for the
      #  superuser. For example, "-e POSTGRES_PASSWORD=password" on "docker run".
      # - image: circleci/postgres:13
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          name: Restore RubyGems Cache
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: Install Node.js
          # https://github.com/nodesource/distributions/blob/master/README.md#debmanual
          command: |
            curl -fsSL https://deb.nodesource.com/setup_current.x | sudo -E bash -
            sudo apt install -y nodejs
      - run:
          name: Install Yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt update -y && sudo apt install yarn -y
      - run:
          name: Bundle install
          command: |
            bundle config set path 'vendor/bundle'
            bundle install --jobs=4 --retry=3
      - save_cache:
          name: Save RubyGems Cache
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      # - run: bundle exec rake db:create
      # - run: bundle exec rake db:schema:load
      # run tests!
      # RuboCop: bundle exec rubocop -D -E -S -P
      # FIXME: Error on Ruby 3.0.0
      # - run:
      #     name: run tests
      #     command: |
      #       mkdir /tmp/test-results
      #       TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
      #         circleci tests split --split-by=timings)"

      #       bundle exec rspec \
      #         --format progress \
      #         --format RspecJunitFormatter \
      #         --out /tmp/test-results/rspec.xml \
      #         --format progress \
      #         $TEST_FILES
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
